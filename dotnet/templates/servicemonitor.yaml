{{- if .Values.metrics.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: {{ template "dotnet.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "dotnet.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ .Values.appComponent }}
    app.kubernetes.io/version: {{ .Values.appVersion }}
    app.kubernetes.io/part-of: {{ .Values.appPartOf }}
    app.kubernetes.io/managed-by: helm
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
{{- if .Values.metrics.enabled }}
    prometheus: {{ .Values.metrics.prometheusInstance }}
{{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dotnet.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/version: {{ .Values.appVersion }}
  endpoints:
{{- if .Values.metrics.endpoints }}
{{ toYaml .Values.metrics.endpoints | indent 4 }}
{{- else }}
  - path: {{ .Values.metrics.endpointPath | default "/metrics" }}
    interval: {{ .Values.metrics.endpointInterval | default "15s" }}
    targetPort: {{ .Values.metrics.endpointTargetPort | default 8080 }}
    honorLabels: {{ .Values.metrics.endpointHonorLabels | default true }}
{{- if and (.Values.istio.enabled) (.Values.metrics.prometheusIstioMtlsEnabled) }}
    scheme: https
    tlsConfig:
      caFile: /etc/prometheus/secrets/istio.{{ .Values.metrics.prometheusIstioSecret }}/root-cert.pem
      certFile: /etc/prometheus/secrets/istio.{{ .Values.metrics.prometheusIstioSecret }}/cert-chain.pem
      keyFile: /etc/prometheus/secrets/istio.{{ .Values.metrics.prometheusIstioSecret }}/key.pem
      insecureSkipVerify: true
{{- end }}
{{- end }}
{{- end }}
